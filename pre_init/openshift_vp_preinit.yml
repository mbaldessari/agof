#!/usr/bin/env ansible-playbook
---
- name: Retrieve Credentials from Kubernetes for use in AAP
  become: false
  connection: local
  hosts: localhost
  gather_facts: false
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
  tasks:
    - name: Retrieve IAC Repo Details
      kubernetes.core.k8s_info:
        kind: ConfigMap
        namespace: aap-config
        name: helm-values
      register: helm_cm

    - name: Extract configmap as YAML
      ansible.builtin.set_fact:
        helm_cm_values: "{{ helm_cm.resources[0].data['values.yaml'] | from_yaml }}"

    - name: Set agof iac repo facts for later writing
      ansible.builtin.set_fact:
        agof_iac_repo: "{{ helm_cm_values['agof']['iac_repo'] }}"
        agof_iac_repo_version: "{{ helm_cm_values['agof']['iac_revision'] }}"
        helm_values: "{{ helm_cm_values }}"

    - name: Show agof iac repo details
      ansible.builtin.debug:
        msg:
          - "agof_iac_repo: {{ agof_iac_repo }}"
          - "agof_iac_repo_version: {{ agof_iac_repo_version }}"

    - name: Retrieve automation hub token
      kubernetes.core.k8s_info:
        kind: Secret
        namespace: aap-config
        name: automation-hub-token
      register: automation_hub_token_secret
      until: automation_hub_token_secret.resources | length == 1
      retries: 20
      delay: 5

    - name: Set automation hub token fact
      ansible.builtin.set_fact:
        automation_hub_token_vault: "{{ automation_hub_token_secret.resources[0].data.token | b64decode | trim }}"

    - name: "BANDINI VP0"
      ansible.builtin.debug:
        msg: "#{{ automation_hub_token_vault }}#"

    - name: Retrieve manifest file
      kubernetes.core.k8s_info:
        kind: Secret
        namespace: aap-config
        name: aap-manifest
      register: manifest_secret
      until: manifest_secret.resources | length == 1
      retries: 20
      delay: 5

    - name: Set manifest fact
      ansible.builtin.set_fact:
        manifest_file: "{{ manifest_secret.resources[0].data.b64content | b64decode | b64decode }}"

    - name: Write temp manifest file
      ansible.builtin.tempfile:
        state: file
        suffix: .zip
      register: manifest_file_tmp

    - name: Set manifest_file_ref fact
      ansible.builtin.set_fact:
        manifest_file_ref: "{{ manifest_file_tmp.path }}"

    - name: Copy manifest contents to tmpfile
      ansible.builtin.copy:
        content: "{{ manifest_file }}"
        dest: "{{ manifest_file_ref }}"
        mode: "0644"

    - name: Parse out vault configmap data
      kubernetes.core.k8s_info:
        kind: ConfigMap
        namespace: vault
        name: openshift-service-ca.crt
      register: vault_ca_cm

    - name: Retrieve CA field
      ansible.builtin.set_fact:
        vault_ca: "{{ vault_ca_cm.resources[0].data['service-ca.crt'] }}"

    - name: Retrieve config details about vault
      kubernetes.core.k8s_info:
        name: vaultkeys
        namespace: imperative
        kind: Secret
      register: vault_secret

    - name: Parse out vault secret data
      ansible.builtin.set_fact:
        vault_data: "{{ vault_secret.resources[0].data.vault_data_json | b64decode | from_json }}"

    - name: Set secrets for use in load AAP playbook
      ansible.builtin.set_fact:
        secrets:
          manifest_file_ref: "{{ manifest_file_ref }}"
          vault_ca: "{{ vault_ca }}"
          vault_root_token: "{{ vault_data.root_token  }}"
          vault_url: https://vault.vault.svc:8200

- name: Retrieve Credentials for AAP on OpenShift and write needed override files
  become: false
  connection: local
  hosts: localhost
  gather_facts: false
  vars:
    kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
    aap_entitled: false
    agof_controller_config_dir: "{{ '~/agofdir' | expanduser }}"
    agof_statedir: "{{ '~/agof' | expanduser }}"
  tasks:
    - name: Retrieve API hostname for AAP
      kubernetes.core.k8s_info:
        kind: Route
        namespace: ansible-automation-platform
        name: aap
      register: aap_host
      until: aap_host.resources | length == 1
      retries: 20
      delay: 5

    - name: Set ansible_host
      ansible.builtin.set_fact:
        ansible_host: "{{ aap_host.resources[0].spec.host }}"
        aap_hostname: "{{ aap_host.resources[0].spec.host }}"

    - name: Retrieve admin password for AAP
      kubernetes.core.k8s_info:
        kind: Secret
        namespace: ansible-automation-platform
        name: aap-admin-password
      register: admin_pw
      until: admin_pw.resources | length == 1
      retries: 20
      delay: 5

    - name: Set admin_password fact
      ansible.builtin.set_fact:
        admin_password: "{{ admin_pw.resources[0].data.password | b64decode }}"

    - name: Report AAP Endpoint
      ansible.builtin.debug:
        msg: "AAP Endpoint: https://{{ ansible_host }}"

    - name: Report AAP User
      ansible.builtin.debug:
        msg: "AAP Admin User: admin"

    - name: Report AAP Admin Password
      ansible.builtin.debug:
        msg: "AAP Admin Password: {{ admin_password }}"

    - name: Check on current API status
      ansible.builtin.uri:
        url: 'https://{{ ansible_host }}/api/controller/v2/config/'
        method: GET
        user: '{{ admin_user | default("admin") }}'
        password: "{{ admin_password }}"
        body_format: json
        validate_certs: false
        force_basic_auth: true
      retries: 40
      delay: 5
      until: config_check is success
      register: config_check

    - name: Entitlement check
      block:
        - name: Determine if aap has been entitled
          ansible.builtin.set_fact:
            aap_entitled: true
          when:
            - config_check.json.license_info.valid_key
      rescue:
        - name: Report that AAP has not yet been entitled
          ansible.builtin.debug:
            msg: "Problem with entitlement check - assuming AAP is not entitled"

    - name: Write inventory file
      ansible.builtin.template:
        src: inventory_agof.j2
        dest: ~/inventory_agof
        mode: "0600"

    - name: Write override file
      ansible.builtin.template:
        src: agof_overrides.yml.j2
        dest: ~/agof_overrides.yml
        mode: "0600"
